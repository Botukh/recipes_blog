volumes:
  pg_data:
  static:
  media:

services:

  db:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    image: julia949/foodgram-backend:latest
    env_file:
      - .env
    command: >
      gunicorn foodgram.wsgi:application
      --bind 0.0.0.0:8000
      --workers 3
      --access-logfile -
      --error-logfile -
      --capture-output
      --log-level debug
    volumes:
      - static:/backend_static
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: julia949/foodgram-frontend:latest
    command: >
      sh -c '
        set -e
        mkdir -p /static &&                       \
        cp -r /app/build/{js,css,media} /static/ &&\
        cp    /app/build/index.html        /static/ &&\
        echo "âœ“ build copied to /static"
      '
    volumes:
      - static:/static

  nginx:
    image: julia949/foodgram-nginx:latest
    env_file: .env
    depends_on:
      - backend
      - frontend
    ports:
      - "8080:80"
    volumes:
      - static:/staticfiles/
      - media:/app/media
