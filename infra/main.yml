name: Foodgram

on:
  push:
    branches:
      - main

jobs:
  build_backend_and_push_to_docker_hub:
    if: github.ref == 'refs/heads/main'
    name: Build & Push Backend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

  build_frontend_and_push_to_docker_hub:
    if: github.ref == 'refs/heads/main'
    name: Build & Push Frontend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.yml"
          target: "${{ secrets.REMOTE_DIR }}"

      - name: Execute remote SSH commands for deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ${{ secrets.REMOTE_DIR }}
            mkdir -p ./media
            mkdir -p ./docs
            cat > .env << EOF
            DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
            DEBUG=False
            ALLOWED_HOSTS=localhost,${{ secrets.SERVER_IP }},${{ secrets.DOMAIN }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            DB_HOST=db
            DB_PORT=5432
            EOF
            sudo docker-compose pull
            sudo docker-compose down
            sudo docker-compose up -d
            sleep 5
            sudo docker-compose exec -T backend python manage.py migrate --noinput
            sudo docker-compose exec -T backend python manage.py collectstatic --noinput

  send_telegram_notification:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            *Foodgram*: деплой завершён успешно!
            • Пользователь: `${{ github.actor }}`
            • Коммит: `${{ github.event.head_commit.message }}`
            • Ссылка: https://github.com/${{ github.repository }}/commit/${{ github.sha }}  
